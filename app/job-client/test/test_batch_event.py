# coding: utf-8

"""
    Radix job scheduler server.

    This is the API Server for the Radix job scheduler server.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.batch_event import BatchEvent  # noqa: E501

class TestBatchEvent(unittest.TestCase):
    """BatchEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BatchEvent:
        """Test BatchEvent
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BatchEvent`
        """
        model = BatchEvent()  # noqa: E501
        if include_optional:
            return BatchEvent(
                batch_name = ''batch1'',
                batch_type = '"job"',
                created = '2006-01-02T15:04:05Z',
                ended = '2006-01-02T15:04:05Z',
                event = '',
                job_id = ''job1'',
                job_statuses = [
                    openapi_client.models.job_status.JobStatus(
                        batch_name = ''batch1'', 
                        created = '2006-01-02T15:04:05Z', 
                        ended = '2006-01-02T15:04:05Z', 
                        job_id = ''job1'', 
                        message = '"Error occurred"', 
                        name = 'calculator', 
                        started = '2006-01-02T15:04:05Z', 
                        status = 'Waiting', )
                    ],
                message = '"Error occurred"',
                name = 'calculator',
                started = '2006-01-02T15:04:05Z',
                status = 'Waiting'
            )
        else:
            return BatchEvent(
                created = '2006-01-02T15:04:05Z',
                event = '',
                name = 'calculator',
        )
        """

    def testBatchEvent(self):
        """Test BatchEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
